#파이썬에서 배열과 리스트를 동일한 것으로 생각해도 괜찮음
# 리스트 사용시 루프와 사용하는 경우 많음
#리스트 자료의 자리의 숫자와 대화시 사용되는 순번의 차이 주의
#배열 c/c++같은 것의 반복 파이썬은 여러 값을 넣는것
#교재에 있는 것 타이핑 + 바꿔쓰기 하기
#끝에서 시작을 뺐을 때 길이가 나오도록 하기위해 시작값 포함 끝값 미포함하여 계산함
#ex)[0:3]-->0부터 2까지 길이:3(0,1,2)
#리스트끼리 덧셈 가능 /곱셈은 리스트*(숫자)로 반복시킬 수 있음
#삭제시 del()사용
#교재속 리스트 조작 함수 한번씩 해보기# 임의로 생성한 100개의 자연수
numbers = [123, 459, 221, 129, 330, 98, 565, 119, 104, 222, 313, 172, 94, 211, 325, 188, 157,
           413, 256, 321, 155, 561, 474, 499, 605, 322, 111, 212, 333, 199, 111, 542, 203,
           440, 700, 410, 303, 186, 125, 591, 731, 131, 799, 182, 99, 440, 601, 499, 412,
           281, 131, 902, 575, 489, 118, 923, 476, 899, 510, 815, 512, 667, 177, 229, 150,
           513, 602, 721, 176, 235, 486, 895, 611, 697, 350, 754, 186, 134, 413, 573, 411,
           312, 295, 250, 730, 211, 804, 117, 478, 250, 741, 688, 319, 900, 930, 501, 395,
           317, 299, 481, 134, 527, 601, 838, 720, 635, 751, 411, 346]


prime_numbers = []


for num in numbers:
    if num < 2:
        continue
    is_prime = True


    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            is_prime = False
            break

    if is_prime:
        prime_numbers.append(num)


print(len(prime_numbers),prime_numbers)


